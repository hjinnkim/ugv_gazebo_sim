<?xml version="1.0"?>

<robot name="scout_mini" xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:arg name="robot_namespace" default="/" />
    <xacro:arg name="urdf_extras" default="empty.urdf" />

    <!-- Sensors Configuration -->
    <xacro:arg name="2d_lidar" default="true" />
    <xacro:arg name="3d_lidar" default="false" />
    <xacro:arg name="camera" default="true" />
    <xacro:arg name="visualize" default="true" />
    
    <!-- GPU setting -->
    <xacro:arg name="gpu" default="true" />
    <xacro:property name="gpu" value="$(arg gpu)" />

    <!-- Lidar Common parameters -->
    <xacro:property name="lidar_pose" default="0 0 0.14" />
    <xacro:property name="lidar_orientation" default="0 0 0" />

    <!-- 2D Lidar parameters -->
    <xacro:arg name="2d_lidar_topic" default="/hokuyo/scan" />
    
    <!-- 3D Lidar parameters -->
    <!-- 3d_lidar : VLP-16, HDL32E -->
    <xacro:arg name="3d_lidar_name" default="VLP-16" />
    <!-- <xacro:arg name="3d_lidar_name" default="HDL-32E" />  -->

    <!-- Camera Common parameters -->
    <xacro:arg name="camera_pose" default="0.13 0 0.1" />
    <xacro:arg name="camera_orientation" default="0 0 0" />

    <!-- Camera : rgb, openni-kinect, realsense-d435 -->
    <!-- <xacro:arg name="camera_name" default="rgb" /> -->
    <xacro:arg name="camera_name" default="openni-kinect" />
    <!-- <xacro:arg name="camera_name" default="realsense-d435" /> -->

    <!-- Realsense Camera parameters -->
    <xacro:arg name="camera_pointcloud" default="true" />
    

    <!-- IMU parameters -->
    <xacro:arg name="imu" default="true" />
    <xacro:arg name="imu_topic" default="/imu" />
    <xacro:arg name="imu_pose" default="0 0 0.07" />
    <xacro:arg name="imu_orientation" default="0 0 0" />


    <!-- SCOUT mini wheel 3D file -->
    <xacro:include filename="$(find scout_description)/urdf/scout_mini_wheel_1.xacro" />
    <xacro:include filename="$(find scout_description)/urdf/scout_mini_wheel_2.xacro" />
    <xacro:include filename="$(find scout_description)/urdf/scout_mini_wheel_3.xacro" />
    <xacro:include filename="$(find scout_description)/urdf/scout_mini_wheel_4.xacro" />

    <!-- Variables -->
    <xacro:property name="M_PI" value="3.14159"/>

    <!-- Vehicle Geometries -->
    <xacro:property name="base_x_size" value="0.6200000" />
    <xacro:property name="base_y_size" value="0.585000" />
    <xacro:property name="base_z_size" value="0.235000" />

    <xacro:property name="wheelbase" value="0.463951"/>
    <xacro:property name="track" value="0.416503"/>
    <xacro:property name="wheel_vertical_offset" value="-0.100998" />
    <xacro:property name="wheel_length" value="0.8e-01" />
    <!-- <xacro:property name="wheel_radius" value="1.600e-01" /> -->

    <!-- SCOUT mini wheel radius is 0.8e-01 -->
    <xacro:property name="wheel_radius" value="0.8e-01" />

    <!-- Base link -->
    <link name="base_link">
        <visual>
            <origin
                    xyz="0 0 0.0"
                    rpy="1.57 0 -1.57" />
            <geometry>
                <mesh filename="package://scout_description/meshes/scout_mini_base_link2.dae" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="1.57 0 -1.57" />
            <geometry>
                <mesh filename="package://scout_description/meshes/scout_mini_base_link2.dae" />
            </geometry>
        </collision>
    </link>

    <!-- <joint name="chassis_link_joint" type="fixed">
        <origin xyz="0 0 ${wheel_radius - wheel_vertical_offset}" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="chassis_link" />
    </joint> -->

    <link name="inertial_link">
        <inertial>
            <mass value="60" />
            <origin xyz="0.0 0.0 0.0" />
            <inertia ixx="2.288641" ixy="0" ixz="0" iyy="5.103976" iyz="0" izz="3.431465" />
        </inertial>
    </link>

    <joint name="inertial_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="inertial_link" />
    </joint>

    <!-- For testing, hang the robot up in the air -->
    <!-- <link name="world" />
    <joint name="world_to_base_link=" type="fixed">
        <origin xyz="0 0 0.5" rpy="0 0 0" />
        <parent link="world"/>
        <child link="base_link"/>
    </joint> -->

    <!-- Scout wheel macros -->
    <!-- wheel labeled from 0 to 3, conter-clockwise, starting from front right wheel -->
    <!-- motor 1 and 2 (left side) are mechanically installed in a reversed direction -->
    <xacro:scout_mini_wheel_1 wheel_prefix="front_left">
    <!--<origin
            xyz="0 0 0"
            rpy="0 0 0" />-->
        <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="-1.57 0 0" />
    </xacro:scout_mini_wheel_1>
    <xacro:scout_mini_wheel_2 wheel_prefix="rear_left">
    <!--<origin
            xyz="0 0 0"
            rpy="0 0 0" />-->
        <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="-1.57 0 0" />
    </xacro:scout_mini_wheel_2>
    <xacro:scout_mini_wheel_3 wheel_prefix="front_right">
    <!--<origin
            xyz="0 0 0"
            rpy="0 0 0" />-->
        <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset+0.001}" rpy="1.57 0 0" />
    </xacro:scout_mini_wheel_3>
    <xacro:scout_mini_wheel_4 wheel_prefix="rear_right">
    <!--<origin
           xyz="0 0 0"
           rpy="0 0 0" />-->
        <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset+0.001}" rpy="1.57 0 0" />
    </xacro:scout_mini_wheel_4>

    <!-- Additional definitions -->
    <xacro:include filename="$(arg urdf_extras)" />

    <!-- Gazebo definitions  -->
    <xacro:include filename="$(find scout_description)/urdf/scout_mini.gazebo" />

    <gazebo>
        <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>50.0</updateRate>
            <bodyName>base_link</bodyName>
            <topicName>odom_gazebo</topicName>
            <gaussianNoise>0.0</gaussianNoise>
            <frameName>world</frameName>
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>
    </gazebo>


    <!-- SENSORS -->
    <!-- SENSORS -->
    <!-- SENSORS -->
    <!-- SENSORS -->
    <!-- SENSORS -->
    

    <!-- 2D hokuyo lidar -->
    <xacro:if value="$(arg 2d_lidar)" >
        <xacro:include filename="$(find scout_description)/urdf/hokuyo_2d.xacro" />
        <xacro:hokuyo_lidar parent_link="base_link" topicName="$(arg 2d_lidar_topic)" visualize="$(arg visualize)" gpu="${gpu}">
            <origin xyz="${lidar_pose}" rpy="${lidar_orientation}" />
        </xacro:hokuyo_lidar>
    </xacro:if>

    <!-- 3D Velodyne lidar -->
    <xacro:if value="$(arg 3d_lidar)" >
        <xacro:include filename="$(find scout_description)/urdf/$(arg 3d_lidar_name).xacro" />
        <xacro:scout_3d_lidar parent_link="base_link" visualize="$(arg visualize)" gpu="${gpu}" xyz="${lidar_pose}" rpy="${lidar_orientation}" />
    </xacro:if>

    <!-- Camera -->
    <xacro:if value="$(arg camera)" >
        <xacro:include filename="$(find scout_description)/urdf/$(arg camera_name).xacro" />
        <xacro:scout_camera parent_link="base_link" name="camera" topics_ns="camera" publish_pointcloud="$(arg camera_pointcloud)" visualize="$(arg visualize)" xyz="$(arg camera_pose)" rpy="$(arg camera_orientation)" />
    </xacro:if>

    <!-- IMU -->
    <xacro:if value="$(arg imu)" >
        <xacro:include filename="$(find scout_description)/urdf/imu.xacro" />
        <xacro:IMU parent_link="base_link" topicName="$(arg imu_topic)">
            <origin xyz="$(arg imu_pose)" rpy="$(arg imu_orientation)" />
        </xacro:IMU>  
    </xacro:if>

</robot>
